version: '3'

services:

  # Pub/Sub Broker (Redis)
  redis_pubsub:
    image: atomos
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - redis
    environment:
      - DB_DRIVER=$DB_DRIVER
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_HOST=database
      - DB_PORT=$DB_PORT
      - DB_NAME=$DB_NAME
      - REDIS_HOST=redis
      - REDIS_PORT=$REDIS_PORT
      - SMTP_HOST=mail
      - SMTP_PORT=$SMTP_PORT
      - SMTP_USER=$SMTP_USER
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./source:/source
      - ./tests:/tests
    entrypoint:
      - python
      - /source/identity/api/event_consumer.py
    restart: always

  # API (gRPC)
  api:
    image: atomos
    depends_on:
      - redis_pubsub
    environment:
      - DB_DRIVER=$DB_DRIVER
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_HOST=database
      - DB_PORT=$DB_PORT
      - DB_NAME=$DB_NAME
      - REDIS_HOST=redis
      - REDIS_PORT=$REDIS_PORT
      - SMTP_HOST=mail
      - SMTP_PORT=$SMTP_PORT
      - SMTP_USER=$SMTP_USER
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - API_HOST=$API_HOST
      - API_PORT=$API_PORT
      - SECRET_KEY=$SECRET_KEY
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./source:/source
      - ./tests:/tests
    entrypoint:
      - python
      - /source/identity/api/grpc/server.py
    ports:
      - $API_PORT:$API_PORT
    restart: always

  # Database
  database:
    image: postgres
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
    volumes:
      - database_data:/data/database
    ports:
      - $DB_PORT:$DB_PORT
    restart: always

  # Redis
  redis:
    image: redis:alpine
    ports:
      - $REDIS_PORT:$REDIS_PORT
    restart: always

  # Mail server
  mail:
    image: mailhog/mailhog
    environment:
      - MH_SMTP_BIND_ADDR=0.0.0.0:${SMTP_PORT}
      - MH_UI_BIND_ADDR=0.0.0.0:8025
    ports:
      - $SMTP_PORT:$SMTP_PORT
      - '8025:8025'
    restart: always

volumes:
  database_data:
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from identity.api.proto import identity_pb2 as identity_dot_identity__pb2


class IdentityStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePermission = channel.unary_unary(
                '/identity.Identity/CreatePermission',
                request_serializer=identity_dot_identity__pb2.CreatePermissionRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.CreatePermissionResponse.FromString,
                )
        self.GetPermission = channel.unary_unary(
                '/identity.Identity/GetPermission',
                request_serializer=identity_dot_identity__pb2.GetPermissionRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.GetPermissionResponse.FromString,
                )
        self.QueryPermissions = channel.unary_unary(
                '/identity.Identity/QueryPermissions',
                request_serializer=identity_dot_identity__pb2.QueryPermissionsRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.QueryPermissionsResponse.FromString,
                )
        self.UpdatePermission = channel.unary_unary(
                '/identity.Identity/UpdatePermission',
                request_serializer=identity_dot_identity__pb2.UpdatePermissionRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.UpdatePermissionResponse.FromString,
                )
        self.DeletePermission = channel.unary_unary(
                '/identity.Identity/DeletePermission',
                request_serializer=identity_dot_identity__pb2.DeletePermissionRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.DeletePermissionResponse.FromString,
                )
        self.CreateRole = channel.unary_unary(
                '/identity.Identity/CreateRole',
                request_serializer=identity_dot_identity__pb2.CreateRoleRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.CreateRoleResponse.FromString,
                )
        self.GetRole = channel.unary_unary(
                '/identity.Identity/GetRole',
                request_serializer=identity_dot_identity__pb2.GetRoleRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.GetRoleResponse.FromString,
                )
        self.QueryRoles = channel.unary_unary(
                '/identity.Identity/QueryRoles',
                request_serializer=identity_dot_identity__pb2.QueryRolesRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.QueryRolesResponse.FromString,
                )
        self.UpdateRole = channel.unary_unary(
                '/identity.Identity/UpdateRole',
                request_serializer=identity_dot_identity__pb2.UpdateRoleRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.UpdateRoleResponse.FromString,
                )
        self.DeleteRole = channel.unary_unary(
                '/identity.Identity/DeleteRole',
                request_serializer=identity_dot_identity__pb2.DeleteRoleRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.DeleteRoleResponse.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/identity.Identity/CreateUser',
                request_serializer=identity_dot_identity__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.CreateUserResponse.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/identity.Identity/GetUser',
                request_serializer=identity_dot_identity__pb2.GetUserRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.GetUserResponse.FromString,
                )
        self.QueryUsers = channel.unary_unary(
                '/identity.Identity/QueryUsers',
                request_serializer=identity_dot_identity__pb2.QueryUsersRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.QueryUsersResponse.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/identity.Identity/UpdateUser',
                request_serializer=identity_dot_identity__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.UpdateUserResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/identity.Identity/DeleteUser',
                request_serializer=identity_dot_identity__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.DeleteUserResponse.FromString,
                )
        self.CreateAPIKey = channel.unary_unary(
                '/identity.Identity/CreateAPIKey',
                request_serializer=identity_dot_identity__pb2.CreateAPIKeyRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.CreateAPIKeyResponse.FromString,
                )
        self.GetAPIKey = channel.unary_unary(
                '/identity.Identity/GetAPIKey',
                request_serializer=identity_dot_identity__pb2.GetAPIKeyRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.GetAPIKeyResponse.FromString,
                )
        self.UpdateAPIKey = channel.unary_unary(
                '/identity.Identity/UpdateAPIKey',
                request_serializer=identity_dot_identity__pb2.UpdateAPIKeyRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.UpdateAPIKeyResponse.FromString,
                )
        self.DeleteAPIKey = channel.unary_unary(
                '/identity.Identity/DeleteAPIKey',
                request_serializer=identity_dot_identity__pb2.DeleteAPIKeyRequest.SerializeToString,
                response_deserializer=identity_dot_identity__pb2.DeleteAPIKeyResponse.FromString,
                )


class IdentityServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAPIKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAPIKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAPIKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAPIKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePermission': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePermission,
                    request_deserializer=identity_dot_identity__pb2.CreatePermissionRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.CreatePermissionResponse.SerializeToString,
            ),
            'GetPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermission,
                    request_deserializer=identity_dot_identity__pb2.GetPermissionRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.GetPermissionResponse.SerializeToString,
            ),
            'QueryPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPermissions,
                    request_deserializer=identity_dot_identity__pb2.QueryPermissionsRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.QueryPermissionsResponse.SerializeToString,
            ),
            'UpdatePermission': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePermission,
                    request_deserializer=identity_dot_identity__pb2.UpdatePermissionRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.UpdatePermissionResponse.SerializeToString,
            ),
            'DeletePermission': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePermission,
                    request_deserializer=identity_dot_identity__pb2.DeletePermissionRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.DeletePermissionResponse.SerializeToString,
            ),
            'CreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRole,
                    request_deserializer=identity_dot_identity__pb2.CreateRoleRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.CreateRoleResponse.SerializeToString,
            ),
            'GetRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRole,
                    request_deserializer=identity_dot_identity__pb2.GetRoleRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.GetRoleResponse.SerializeToString,
            ),
            'QueryRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryRoles,
                    request_deserializer=identity_dot_identity__pb2.QueryRolesRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.QueryRolesResponse.SerializeToString,
            ),
            'UpdateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRole,
                    request_deserializer=identity_dot_identity__pb2.UpdateRoleRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.UpdateRoleResponse.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=identity_dot_identity__pb2.DeleteRoleRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.DeleteRoleResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=identity_dot_identity__pb2.CreateUserRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.CreateUserResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=identity_dot_identity__pb2.GetUserRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.GetUserResponse.SerializeToString,
            ),
            'QueryUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryUsers,
                    request_deserializer=identity_dot_identity__pb2.QueryUsersRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.QueryUsersResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=identity_dot_identity__pb2.UpdateUserRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.UpdateUserResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=identity_dot_identity__pb2.DeleteUserRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.DeleteUserResponse.SerializeToString,
            ),
            'CreateAPIKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAPIKey,
                    request_deserializer=identity_dot_identity__pb2.CreateAPIKeyRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.CreateAPIKeyResponse.SerializeToString,
            ),
            'GetAPIKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIKey,
                    request_deserializer=identity_dot_identity__pb2.GetAPIKeyRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.GetAPIKeyResponse.SerializeToString,
            ),
            'UpdateAPIKey': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAPIKey,
                    request_deserializer=identity_dot_identity__pb2.UpdateAPIKeyRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.UpdateAPIKeyResponse.SerializeToString,
            ),
            'DeleteAPIKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAPIKey,
                    request_deserializer=identity_dot_identity__pb2.DeleteAPIKeyRequest.FromString,
                    response_serializer=identity_dot_identity__pb2.DeleteAPIKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'identity.Identity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Identity(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/CreatePermission',
            identity_dot_identity__pb2.CreatePermissionRequest.SerializeToString,
            identity_dot_identity__pb2.CreatePermissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetPermission',
            identity_dot_identity__pb2.GetPermissionRequest.SerializeToString,
            identity_dot_identity__pb2.GetPermissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/QueryPermissions',
            identity_dot_identity__pb2.QueryPermissionsRequest.SerializeToString,
            identity_dot_identity__pb2.QueryPermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdatePermission',
            identity_dot_identity__pb2.UpdatePermissionRequest.SerializeToString,
            identity_dot_identity__pb2.UpdatePermissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/DeletePermission',
            identity_dot_identity__pb2.DeletePermissionRequest.SerializeToString,
            identity_dot_identity__pb2.DeletePermissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/CreateRole',
            identity_dot_identity__pb2.CreateRoleRequest.SerializeToString,
            identity_dot_identity__pb2.CreateRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetRole',
            identity_dot_identity__pb2.GetRoleRequest.SerializeToString,
            identity_dot_identity__pb2.GetRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/QueryRoles',
            identity_dot_identity__pb2.QueryRolesRequest.SerializeToString,
            identity_dot_identity__pb2.QueryRolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdateRole',
            identity_dot_identity__pb2.UpdateRoleRequest.SerializeToString,
            identity_dot_identity__pb2.UpdateRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/DeleteRole',
            identity_dot_identity__pb2.DeleteRoleRequest.SerializeToString,
            identity_dot_identity__pb2.DeleteRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/CreateUser',
            identity_dot_identity__pb2.CreateUserRequest.SerializeToString,
            identity_dot_identity__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetUser',
            identity_dot_identity__pb2.GetUserRequest.SerializeToString,
            identity_dot_identity__pb2.GetUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/QueryUsers',
            identity_dot_identity__pb2.QueryUsersRequest.SerializeToString,
            identity_dot_identity__pb2.QueryUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdateUser',
            identity_dot_identity__pb2.UpdateUserRequest.SerializeToString,
            identity_dot_identity__pb2.UpdateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/DeleteUser',
            identity_dot_identity__pb2.DeleteUserRequest.SerializeToString,
            identity_dot_identity__pb2.DeleteUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAPIKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/CreateAPIKey',
            identity_dot_identity__pb2.CreateAPIKeyRequest.SerializeToString,
            identity_dot_identity__pb2.CreateAPIKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAPIKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetAPIKey',
            identity_dot_identity__pb2.GetAPIKeyRequest.SerializeToString,
            identity_dot_identity__pb2.GetAPIKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAPIKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdateAPIKey',
            identity_dot_identity__pb2.UpdateAPIKeyRequest.SerializeToString,
            identity_dot_identity__pb2.UpdateAPIKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAPIKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/DeleteAPIKey',
            identity_dot_identity__pb2.DeleteAPIKeyRequest.SerializeToString,
            identity_dot_identity__pb2.DeleteAPIKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
